{"file":"/home/jm/Projects/Modules/fp/src/function-utils.ts","mappings":";;AAAA,+BAAmC;AAGtB,QAAA,WAAW,GAAG,CAAU,GAAG,MAAW,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,kBAAW,CAAC,KAAK,CAAC,CAAC,CAAC;AAEpF,QAAA,MAAM,GAAG,CAAS,IAAI,EAAE,EAAE;IACnC,MAAM,MAAM,GAAG,EAAE,CAAA;IACjB,IAAI;QACA,IAAI,EAAE,CAAA;KACT;IAAC,OAAM,GAAG,EAAC;KAEX;IACD,2BAA2B;AAC/B,CAAC,CAAA;AAED,MAAM,IAAI,GAAG,CAAI,EAAY,EAAK,EAAE;IAChC,IAAI,EAAE,CAAC,MAAM,KAAK,CAAC,EAAE;QACnB,MAAM,IAAI,KAAK,CAAC,aAAa,CAAC,CAAA;KAC/B;IACD,OAAO,EAAE,CAAC,CAAC,CAAC,CAAA;AACd,CAAC,CAAA;AAEH;;;;;MAKM","names":[],"sources":["/home/jm/Projects/Modules/fp/src/function-utils.ts"],"sourcesContent":["import { isUndefined } from \"util\";\n\n \nexport const missingArgs = <T = any>(...params: T[]) => params.some(param => isUndefined(param));\n\nexport const result = <T= any>(func) => {\n    const result = {}\n    try {\n        func()\n    } catch(err){\n\n    }\n    //Reflect.defineMetadata();\n}\n\nconst head = <A>(as: Array<A>): A => {\n    if (as.length === 0) {\n      throw new Error('Empty array')\n    }\n    return as[0]\n  }\n  \n/*   let s: string\n  try {\n    s = String(head([]))\n  } catch (e) {\n    s = e.message\n  } */"],"version":3}